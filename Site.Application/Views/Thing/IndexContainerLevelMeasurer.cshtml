@model IEnumerable<Domain.Models.Things.ContainerLevelMeasurer>

@{
    ViewBag.Title = "Container Level Measurer";
}

@section scripts
{
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script>
        var map;
        function loadMapScenario() {
            map = new Microsoft.Maps.Map(document.getElementById('mapViewer'), {
                credentials: 'AhTFkkLNWCZeF1-u8TmOVGfumUUQZx6fvbEydcnpeOl2z6HkE09oXUayXjV6yW4V',
                center: new Microsoft.Maps.Location(-29.691037,-53.835232),
                zoom: 13
            });
            Microsoft.Maps.Events.addHandler(map, 'click', function (e) {
                $("#dialog-confirm").dialog({
                    resizable: false,
                    height:140,
                    modal: true,
                    buttons: {
                        "Create new": function() {
                            var point = new Microsoft.Maps.Point(e.getX(), e.getY());
                            var loc = e.target.tryPixelToLocation(point);
                            var location = new Microsoft.Maps.Location(loc.latitude, loc.longitude);
                            var ContainerLevelMeasurer =
                            {
                                "Latitude": location.latitude,
                                "Longitude": location.longitude,
                                "Level": 0
                            };
                            $.ajax({
                                url: '/Thing/CreateContainerLevelMeasurer/',
                                data: JSON.stringify(ContainerLevelMeasurer),
                                type: 'POST',
                                contentType: 'application/json; charset=utf-8'
                            });
                            window.location.href = "@Url.Action("Index")";
                            $(this).dialog( "close" );
                        },
                        Cancel: function() {
                            $(this).dialog( "close" );
                        }
                    }
                });
            });
            @foreach (var location in Model)
            {
                <text>
                var pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(@location.Latitude, @location.Longitude), { icon: @{ if (location.Level > 0.2m) { <text>'Content/Images/trash.png'</text> } else { <text>'Content/Images/trash-low-level.png'</text> } } });
                map.entities.push(pushpin);
                Microsoft.Maps.Events.addHandler(pushpin, 'click', function () {
                    window.location.href = "@Url.Action("DetailsContainerLevelMeasurer", new { Id = location.Id })";
                });
                </text>
            }
        }
    </script>
    <script src="http://www.bing.com/api/maps/mapcontrol?branch=release&callback=loadMapScenario" async defer></script>
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">

<div style="display: none;" id="dialog-confirm" title="Create new Container Level Measurer?">
    <p><span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span>Are you sure?</p>
</div>

<h2>Container Level Measurer</h2>

<p>
    @Html.ActionLink("Create New", "CreateContainerLevelMeasurer")
</p>

<div id='mapViewer' style='width: 100%; height: 300px;'></div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Level)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @item.Latitude.ToString("0.000000")
        </td>
        <td>
            @item.Longitude.ToString("0.000000")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Level)
        </td>
        <td>
            @Html.ActionLink("Edit", "EditContainerLevelMeasurer", new { id=item.Id }) |
            @Html.ActionLink("Details", "DetailsContainerLevelMeasurer", new { id=item.Id }) |
            @Html.ActionLink("Delete", "DeleteContainerLevelMeasurer", new { id=item.Id })
        </td>
    </tr>
}

</table>
